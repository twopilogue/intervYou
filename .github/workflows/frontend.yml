name: Frontend CI/CD

on:
  push:
    paths: "FE/**"
    branches: ["feature/common-issue62"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20.15.0

      - name: make .env.local
        run: |
          cd ./FE
          touch ./.env.local
          echo "${{ secrets.ENVFILE }}" > ./.env.local

      - name: Install Dependencies
        run: cd ./FE && npm install

      - name: Build Next.js
        run: cd ./FE && npm run build

      - name: Build Docker image
        run: |
          cd ./FE
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONTEND_NAME }} .

      - name: Login Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker Hub
        run: |
          cd ./FE
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONTEND_NAME }}

      # - name: Get GitHub IP
      #   id: ip
      #   uses: haythem/public-ip@v1.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # - name: Add Github Actions IP to Security group
      #   run: |
      #     aws ec2 authorize-security-group-ingress \
      #     --group-id ${{ secrets.AWS_SG_ID }} \
      #     --protocol tcp --port 22 \
      #     --cidr ${{ steps.ip.outputs.ipv4 }}/32

      - name: AWS EC2 Connection
        uses: appleboy/ssh-action@v0.1.6
        with:
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          timeout: 60s
          script: |
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONTEND_NAME }}
            sudo docker stop ${{ secrets.DOCKERHUB_FRONTEND_NAME }}
            sudo docker rm ${{ secrets.DOCKERHUB_FRONTEND_NAME }}
            sudo docker run -it -d -p 80:3000 --name ${{ secrets.DOCKERHUB_FRONTEND_NAME }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_FRONTEND_NAME }}

      # - name: Remove IP FROM security group
      #   run: |
      #     aws ec2 revoke-security-group-ingress \
      #     --group-id ${{ secrets.AWS_SG_ID }} \
      #     --protocol tcp --port 22 \
      #     --cidr ${{ steps.ip.outputs.ipv4 }}/32
